// <auto-generated />
using System;
using FBQ.Salud_AccessData.Commands;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FBQ.Salud_AccessData.Migrations
{
    [DbContext(typeof(FbqSaludDbContext))]
    [Migration("20221021044142_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HorarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("HorarioId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Enfermera", b =>
                {
                    b.Property<int>("EnfermeraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnfermeraId"), 1L, 1);

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("HorarioId")
                        .HasColumnType("int");

                    b.Property<string>("TipoEnfermera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnfermeraId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Enfermeras");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Especialidad", b =>
                {
                    b.Property<int>("EspecilalidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspecilalidadId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EspecilalidadId");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Habitacion", b =>
                {
                    b.Property<int>("HabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HabitacionId"), 1L, 1);

                    b.Property<int>("EnfermeraId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("Piso")
                        .HasColumnType("int");

                    b.HasKey("HabitacionId");

                    b.ToTable("Habitaciones");

                    b.HasData(
                        new
                        {
                            HabitacionId = 1,
                            EnfermeraId = 1,
                            Estado = true,
                            Fecha = new DateTime(2022, 10, 21, 1, 41, 42, 618, DateTimeKind.Local).AddTicks(9173),
                            Numero = 204,
                            PacienteId = 1,
                            Piso = 1
                        },
                        new
                        {
                            HabitacionId = 2,
                            EnfermeraId = 1,
                            Estado = true,
                            Fecha = new DateTime(2022, 10, 21, 1, 41, 42, 618, DateTimeKind.Local).AddTicks(9183),
                            Numero = 205,
                            PacienteId = 2,
                            Piso = 1
                        },
                        new
                        {
                            HabitacionId = 3,
                            EnfermeraId = 1,
                            Estado = true,
                            Fecha = new DateTime(2022, 10, 21, 1, 41, 42, 618, DateTimeKind.Local).AddTicks(9184),
                            Numero = 206,
                            PacienteId = 3,
                            Piso = 1
                        },
                        new
                        {
                            HabitacionId = 4,
                            EnfermeraId = 1,
                            Estado = true,
                            Fecha = new DateTime(2022, 10, 21, 1, 41, 42, 618, DateTimeKind.Local).AddTicks(9185),
                            Numero = 207,
                            PacienteId = 4,
                            Piso = 1
                        },
                        new
                        {
                            HabitacionId = 5,
                            EnfermeraId = 2,
                            Estado = true,
                            Fecha = new DateTime(2022, 10, 21, 1, 41, 42, 618, DateTimeKind.Local).AddTicks(9186),
                            Numero = 208,
                            PacienteId = 5,
                            Piso = 1
                        },
                        new
                        {
                            HabitacionId = 6,
                            EnfermeraId = 2,
                            Estado = true,
                            Fecha = new DateTime(2022, 10, 21, 1, 41, 42, 618, DateTimeKind.Local).AddTicks(9188),
                            Numero = 209,
                            PacienteId = 6,
                            Piso = 1
                        },
                        new
                        {
                            HabitacionId = 7,
                            EnfermeraId = 3,
                            Estado = true,
                            Fecha = new DateTime(2022, 10, 21, 1, 41, 42, 618, DateTimeKind.Local).AddTicks(9189),
                            Numero = 210,
                            PacienteId = 7,
                            Piso = 1
                        },
                        new
                        {
                            HabitacionId = 8,
                            EnfermeraId = 3,
                            Estado = true,
                            Fecha = new DateTime(2022, 10, 21, 1, 41, 42, 618, DateTimeKind.Local).AddTicks(9190),
                            Numero = 211,
                            PacienteId = 8,
                            Piso = 1
                        });
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.HorarioTrabajo", b =>
                {
                    b.Property<int>("HorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioId"), 1L, 1);

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HorarioId");

                    b.ToTable("HorariosTrabajo");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicoId"), 1L, 1);

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("HorarioId")
                        .HasColumnType("int");

                    b.HasKey("MedicoId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.TipoEmpleado", b =>
                {
                    b.Property<int>("TipoEmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoEmpleadoId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("TipoEmpleadoId");

                    b.ToTable("TipoEmpleados");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Empleado", b =>
                {
                    b.HasOne("FBQ.Salud_Domain.Entities.HorarioTrabajo", "horario")
                        .WithMany()
                        .HasForeignKey("HorarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("horario");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Enfermera", b =>
                {
                    b.HasOne("FBQ.Salud_Domain.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Medico", b =>
                {
                    b.HasOne("FBQ.Salud_Domain.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBQ.Salud_Domain.Entities.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Especialidad");
                });
#pragma warning restore 612, 618
        }
    }
}
